aggregator:
  ip: ${agg_ip}
  port: ${agg_port}
connection:
  info:
    ip: ${party_ip}
    port: ${party_port}
  name: FlaskConnection
  path: ibmfl.connection.flask_connection
  sync: false
data:
  info:
    env_spec:
      env_definition: ibmfl.util.data_handlers.pendulum_env
      env_name: PendulumEnv
  name: PendulumEnvDataHandler
  path: ibmfl.util.data_handlers.pendulum_env_data_handler
local_training:
  name: RLLocalTrainingHandler
  path: ibmfl.party.training.rl_local_training_handler
model:
  name: RLlibFLModel
  path: ibmfl.model.rllib_fl_model
  spec:
    policy_definition: DDPG
    policy_name: pendulum-ddpg
    params:
      evaluation:
        run_config:
          steps: 10000
      training:
        model_config:
          eager: false
          num_gpus: 0
          num_workers: 4
        run_config:
          checkpoint_frequency: 1
          iterations: 1
protocol_handler:
  name: PartyProtocolHandler
  path: ibmfl.party.party_protocol_handler
metrics_recorder:
  name: MetricsRecorder
  path: ibmfl.party.metrics.metrics_recorder
  output_file: ${staging_dir}/${ts}/metrics_party${id}
  output_type: json
  compute_pre_train_eval: False
  compute_post_train_eval: True
